{"version":3,"sources":["components/Pagination/Pagination.js","components/Select/Select.js","App.js","index.js"],"names":["Pagination","totalItems","perPage","page","onPageChange","maxPageCount","Math","ceil","allPages","Array","from","length","_","i","className","classNames","disabled","type","onClick","map","singlePage","active","key","Select","onPerPageChange","name","value","onChange","e","target","style","width","variant","App","useState","state","setState","toItem","makeInfo","newPerPage","prevState","targetPage","ReactDOM","render","document","getElementById"],"mappings":"2NAIaA,EAAa,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAChDC,EAAeC,KAAKC,KAAKN,EAAaC,GACtCM,EAAWC,MAAMC,KAAK,CAAEC,OAAQN,IAAgB,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAEpE,OACE,wBAAIC,UAAU,iDACZ,wBACEA,UAAWC,IAAW,YAAa,CACjCC,SAAmB,IAATb,KAGZ,4BACEc,KAAK,SACLH,UAAU,YACVI,QAAS,kBAAMd,EAAaD,EAAO,KAHrC,aASDK,EAASW,KAAI,SAAAC,GAAU,OACtB,wBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAAejB,IAEzBmB,IAAKF,GAEL,4BACEH,KAAK,SACLH,UAAU,YACVI,QAAS,kBAAMd,EAAagB,KAE3BA,OAKP,wBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUb,IAASE,KAGrB,4BACEY,KAAK,SACLH,UAAU,YACVI,QAAS,kBAAMd,EAAaD,EAAO,KAHrC,WC3CKoB,EAAS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBtB,EAAc,EAAdA,QAGxC,OACE,yBAAKY,UAAU,iCACb,4BACEW,KAAK,UACLC,MAAOxB,EACPyB,SAAU,SAAAC,GAAC,OAAIJ,GAAiBI,EAAEC,OAAOH,QACzCZ,UAAU,gBACVgB,MAAO,CAAEC,MAAO,UATU,CAAC,EAAG,EAAG,GAAI,IAWZZ,KAAI,SAAAa,GAAO,OAClC,4BACEV,IAAKU,EACLN,MAAOM,GAENA,SCuCEC,EAtDH,WAAO,IAAD,EACUC,mBAAS,CACjCjC,WAAY,GACZC,QAAS,EACTC,KAAM,IAJQ,mBACTgC,EADS,KACFC,EADE,KAsChB,OACE,oCACE,wBAAItB,UAAU,oBAAd,cACA,uBAAGA,UAAU,eAXA,WAAO,IACdb,EAA8BkC,EAA9BlC,WAAYC,EAAkBiC,EAAlBjC,QAASC,EAASgC,EAAThC,KAEvBkC,EAAUlC,EAAOD,EAAWD,EAAaA,EAAaE,EAAOD,EAEnE,MAAM,GAAN,OAHmBC,EAAOD,EAAWA,EAAW,EAGhD,cAAwBmC,EAAxB,eAAqCpC,GAMPqC,IAC5B,kBAAC,EAAD,CACEd,gBAzBkB,SAACe,GACnBJ,EAAMjC,UAAYqC,GAItBH,GAAS,SAAAI,GAAS,kCACbA,GADa,IAEhBrC,KAAM,EACND,QAASqC,QAkBPrC,QAASiC,EAAMjC,UAEjB,kBAAC,EAAD,iBACMiC,EADN,CAEE/B,aAzCe,SAACqC,GAChBN,EAAMhC,OAASsC,GAInBL,GAAS,SAAAI,GAAS,kCACbA,GADa,IAEhBrC,KAAMsC,aCfZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fb90764a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Pagination = ({ totalItems, perPage, page, onPageChange }) => {\n  const maxPageCount = Math.ceil(totalItems / perPage);\n  const allPages = Array.from({ length: maxPageCount }, (_, i) => i + 1);\n\n  return (\n    <ul className=\"pagination d-flex justify-content-center mt-5\">\n      <li\n        className={classNames('page-item', {\n          disabled: page === 1,\n        })}\n      >\n        <button\n          type=\"button\"\n          className=\"page-link\"\n          onClick={() => onPageChange(page - 1)}\n        >\n          Previous\n        </button>\n      </li>\n\n      {allPages.map(singlePage => (\n        <li\n          className={classNames('page-item', {\n            active: singlePage === page,\n          })}\n          key={singlePage}\n        >\n          <button\n            type=\"button\"\n            className=\"page-link\"\n            onClick={() => onPageChange(singlePage)}\n          >\n            {singlePage}\n          </button>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item', {\n          disabled: page === maxPageCount,\n        })}\n      >\n        <button\n          type=\"button\"\n          className=\"page-link\"\n          onClick={() => onPageChange(page + 1)}\n        >\n          Next\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nPagination.propTypes = {\n  totalItems: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = ({ onPerPageChange, perPage }) => {\n  const possiblePerPageVariants = [3, 5, 10, 20];\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <select\n        name=\"perPage\"\n        value={perPage}\n        onChange={e => onPerPageChange(+e.target.value)}\n        className=\"custom-select\"\n        style={{ width: '100px' }}\n      >\n        {possiblePerPageVariants.map(variant => (\n          <option\n            key={variant}\n            value={variant}\n          >\n            {variant}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nSelect.propTypes = {\n  onPerPageChange: PropTypes.func.isRequired,\n  perPage: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { Select } from './components/Select';\n\nconst App = () => {\n  const [state, setState] = useState({\n    totalItems: 42,\n    perPage: 5,\n    page: 1,\n  });\n\n  const onPageChange = (targetPage) => {\n    if (state.page === targetPage) {\n      return;\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      page: targetPage,\n    }));\n  };\n\n  const onPerPageChange = (newPerPage) => {\n    if (state.perPage === newPerPage) {\n      return;\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      page: 1,\n      perPage: newPerPage,\n    }));\n  };\n\n  const makeInfo = () => {\n    const { totalItems, perPage, page } = state;\n    const fromItem = ((page * perPage) - perPage) + 1;\n    const toItem = (page * perPage) > totalItems ? totalItems : page * perPage;\n\n    return `${fromItem} - ${toItem} of ${totalItems}`;\n  };\n\n  return (\n    <>\n      <h1 className=\"text-center mt-3\">Pagination</h1>\n      <p className=\"text-center\">{makeInfo()}</p>\n      <Select\n        onPerPageChange={onPerPageChange}\n        perPage={state.perPage}\n      />\n      <Pagination\n        {...state}\n        onPageChange={onPageChange}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}